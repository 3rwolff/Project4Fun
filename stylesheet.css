/*THIS IS THE BASIC STRUCTURE CSS*/
html {
	scroll-behavior: smooth;	
}
body {
	background-color: #333;
	font-family: cursive;
}
#header {
	display: flex;
}
.headerContent {
	margin: auto;
	padding: 0px 0px 0px 0px;
}
.img {
	width: 15%;
	height: auto;
}

#topMenu {
	display: ;
	width: 600px;
	font-size: 20pt;
	font-variant: small-caps;
	color: white;
	background-color: none;
	border: none;
	font-family: sans-serif;
	padding: 0px 0px 0px 0px;
}
.menuLinks {
	display: inline-block;
	position: relative;
	cursor: pointer;
	width: 32%;
	background-color: red;
	padding: 0px 0px 0px 0px;
	border: none;
}
.menuLinks:hover {
	background-color: #555;
}

.mainBodyOptions {
	padding-bottom: 10px;
	padding-left: auto;
}


#ultimateContainer {
	width: 600px;
	border: none;
	outline: none;

}
.mainBody2 {
	display: block;
	position: relative;
	border: none;
	background-color: lightgrey;
	width: 100%;
	padding: 0px;
	font-family: cursive;
	text-align: justify;
		text-justify: inter-word;
}

#hotSpecial {
	display: block;
	background-color: black;
	padding: 6px 0px 6px 0px;
	box-shadow: 5px 10px 10px 0px red;
	color: white;
	border-top-left-radius: 15px;
	border-top-right-radius: 15px;
	border-bottom-left-radius: 15px;
	border-bottom-right-radius: 15px;
	animation: myShadow 4s infinite;
}
#hotSpecial:hover {
	background-color: #ff9900;
	animation: myBackground 4s infinite;
}
@keyframes myShadow {
	/* this at-rule is named 'mymove' and describes one cycle of the animation*/
		60% {box-shadow: 5px 10px 10px 0px darkred;}
		80% {box-shadow: 5px 10px 10px 0px coral;}
}
@keyframes myBackground {
	/* this at-rule is named 'mymove' and describes one cycle of the animation*/
		40% {background: #ff6666;}
		50% {background: #ff4444;}
		90% {background: coral;}
}
hr {
	height: 3px;
	background-color: #333;
	border: none;
	padding: 0px 0px 0px 0px;
	font-size: 8pt;
}
#grillHR {
	width: 75%;
	border-top: solid white 1px;
}

#theGrill {
	width: 96%;
	height: auto;
	margin: auto;
	border: solid #555 5px;
	border-radius: 10px;
    background: repeating-linear-gradient(
            to right,
            #ff6666,
            coral 10px,
            #666 2px,
            black 20px
            );
}
.grillGrate {
  color: black;
  animation: grillAnimation 2s infinite;
  transition-timing-function: ease-in-out;
}
@keyframes grillAnimation {
  /* this at-rule is named 'mymove' and describes one cycle of the animation*/
    33% {background: repeating-linear-gradient(
            to right,
            #ff6666,
            coral 10px,
            #666 2px,
            black 20px
  );
  }
    34% {background: repeating-linear-gradient(
            to right,
            #ff4444,
            #ff6666 10px,
            #666 2px,
            black 20px
  );
  }
    33% {background: repeating-linear-gradient(
            to right,
            #ff4444,
            orange 10px,
            #666 2px,
            black 20px
  );
  }
}
#grillTitle {
	display: block;
	position: relative;
	width: 400px;
	margin: auto;
	align-self: center;
	color: white;
	background-color: black;
	padding: 10px 5px 10px 5px;
}

.mainBody3 {         
	border: none;
	background-color: lightgrey;         
	width: 100%;         
	padding: 0px;     
}
#funFactContent form {      
	font-size: 18pt;   
	font-variant: small-caps;
	padding: 10px 0px 10px 0px;
	background-image:
	url('assets/vertical_wood.PNG');
}
#funFact {
	display: block;
	visibility: visible;
	font-size: 18pt;
	font-variant: small-caps;
	font-weight: bold;
	color: red;
	animation: fadetext 3s infinite;
}
@keyframes fadetext {
	20% {opacity: 1;}
	80% {opacity: 0;}
	82% {opacity: 1;}
}

#condimentsContainer {
	display: flex;
	width: 100%;
	border: none;
}
.condimentsTitle {
	display: block;
	position: relative;
	width: 46%;
	background-image: url('assets/horizontal_wood.PNG');
	padding: 25px 0px 20px 0px;
	border: none;
	font-size: 18pt;
	font-variant: small-caps;
	font-weight: bold;
	text-decoration: underline;
}
.condimentsGroup {
	padding: 10px 0px 0px 0px;
}
.condimentsOptions {
	display: block;
	font-size: 14pt;
	font-weight: normal;
	cursor: pointer;
	padding: 2px 0px 2px 0px;
}
.condimentsOptions:hover {
	font-weight: bold;
}

#condimentsSpace {
	display: inline-block;
	width: 8%;
}

.container {
	cursor: pointer;
}

.chk_txt {
	position: relative;
	padding-left: 0px;
}


#scrollBtn {
	 display: none;
	 position: fixed;
	 bottom: 20px;
	 right: 30px;
	 z-index: 99;
	 font-size: 14pt;
	 border: none;
	 outline: none;
	 background-color: red;
	 color: white;
	 cursor: pointer;
	 padding: 10px;
}
#scrollBtn:hover {
		 background-color: #555;
}

#base {
	display: block;
}
#giphyBurger {
	display: block;
	margin: auto;
	padding: 0px 20px 0px 20px;	
	margin: auto;
}

#theme {
	display: flex;
	height: 35px;
	width: 120px;
	margin: auto;
	cursor: pointer;
	border: none;
}

#light {
	display: inline-block;
	vertical-align: middle;
	background-color: white;
	border: solid black;
	border-top-left-radius: 15px;
	border-bottom-left-radius: 15px;
}

#light:hover {
	box-shadow: 0px 0px 5px 2px grey;
}

#dark {
	display: inline-block;	
	vertical-align: middle;
	background-color: #666;
	border: solid white;
	border-top-right-radius: 15px;
	border-bottom-right-radius: 15px;
}

#dark:hover {
	box-shadow: 0px 0px 5px 2px white;
}

.themeImage {
	display: block;
	width: 50%;
	height: auto;
}

/************************/
/** HELPER CSS CLASSES **/
/************************/
.round {
	border-radius: 4px;
}

.shadow {
	box-shadow: 2px 5px 10px 0px black;
}

/******************************************************
THIS CODE BELOW CREATES A CUSTOM CHECKBOX THAT IS GREY/BLUE
WITH A TWO SIDED BORDER CREATING THE CHECK. THE DEFAULT
CHECKBOX WILL BE HIDDEN
********************************************************/
/* The container */
.container {
  display: block;
  position: relative;
  cursor: pointer;
  font-size: 22px;
  width: 25px;
}

/* Hide the browser's default checkbox */
.container input {
  height: 0;
  width: 0;
}

/* Create a custom square */
.checkmark {
  position: absolute;
  right: 0px;
  height: 25px;
  width: 25px;
  background-color: #555;
}

/* On mouse-over, add a blue background color */
.container:hover input ~ .checkmark {
  background-color: red;
}

/* On mouse-over, add a grey background color */
.container:hover input:checked ~ .checkmark {
  background-color: #555;
}

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark {
  background-color: red;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: block;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
  left: 9px;
  top: 5px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0px 3px 3px 0px; 
  transform: rotate(45deg);
}

/******************************************************
THIS CODE BELOW CREATES A CUSTOM HOVERABLE TOOLTIP
********************************************************/
/*this class is for the element to be tooltipped*/

[tooltip]{
  position: relative;
  display: inline-block;
}
/*the BEFORE makes the arrow*/
[tooltip]::after {
    content: "";
    position: absolute;
    top: -7px;
    left: 50%;
    transform: translate(-50%, 0%);/*center the triange about it's center i.e. 50% ?*/
    border-width: 15px 10px 0px 10px;
    border-style: solid;
    border-color: #555 transparent transparent transparent;
    z-index: 1;
    opacity: 0;
}

/*the AFTER part makes the main tooltip body*/
[tooltip]::before {
    content: attr(tooltip);/*fetch the text from the attribute*/
    position: absolute;
    top: -7px;
    left: 50%;
    box-shadow: 5px 5px 5px 0px black;
    transform: translate(-50%, -99%);
    background: #555;
    text-align: center;
    color: #fff;
    padding: 5px 0px 5px 0px;
    font-size: 16px;
    width: 250px;
    border-radius: 4px;
    z-index: 1;
    opacity: 0;
}
span[tooltip]::after {
	top: -20px;
	transition-delay: 0.5s;
}
span[tooltip]::before {
	top: -20px;
	transition-delay: 0.5s;
	width: 150px;
}

/*on hover change opacity on tooltip elements*/
[tooltip]:hover::after, [tooltip]:hover::before {
   opacity: 1;
}
/**** this part of the tooltip code alows for setting the position ****/

/* these are the default and not needed*/
[tooltip-position='top']::after{
}
[tooltip-position='top']::before{
}

[tooltip-position='bottom2']::after{
    bottom: -15px;
    left: 50%;
    transform: translate(-50%, 0%)  rotate(180deg);
}
[tooltip-position='bottom2']::before{
	top: 0px;
    bottom: -15px;
    left: 50%;
    padding-bottom: 0px;
    transform: translate(-50%, 99%);
}
span[tooltip-position='bottom2']::before {
	top: 0px;
}

/*
[tooltip-position='left']::after{
  left:0%;
  top:50%;
  margin-left:-12px;
  transform:translatey(-50%) rotate(0deg) 
}
[tooltip-position='left']::before{
  left:0%;
  top:50%;
  margin-left:-8px;
  transform: translateX(-100%)   translateY(-50%);
}

[tooltip-position='right']::after{
  left:100%;
  top:50%;
  margin-left:8px;
  transform: translateX(0%)   translateY(-50%);
}
[tooltip-position='right']::before{
  left:100%;
  top:50%;
  margin-left:1px;
  transform:translatey(-50%) rotate(90deg)
}
*/







